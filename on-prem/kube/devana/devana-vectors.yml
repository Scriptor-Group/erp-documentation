apiVersion: apps/v1
kind: Deployment
metadata:
  name: devana-vectors
  namespace: devana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: devana-vectors
  template:
    metadata:
      labels:
        app: devana-vectors
    spec:
      containers:
        - name: devana-vectors
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "3"
              memory: "1Gi"
          image: registry.devana.ai/devana/devana-vectors:0.4.18
          ports:
            - containerPort: 8000
          env:
          - name: IS_PERSISTENT
            value: "true"
          volumeMounts:
          - name: vectors-volume
            mountPath: /chroma/.chroma/index
      volumes:
        - name: vectors-volume
          persistentVolumeClaim:
            claimName: vectors
      imagePullSecrets:
        - name: devana-registry
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vectors
  namespace: devana
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeMode: Filesystem
--- 
apiVersion: v1
kind: Service
metadata:
  name: devana-vectors-service
  namespace: devana
spec:
  selector:
    app: devana-vectors
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000


